/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gehan;



import java.sql.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gEhan
 */
public class Cash_book extends javax.swing.JFrame {
    ResultSet rs;
    PreparedStatement pst;  
    Statement st;  
    
    
 GetDBConnection1 dbc = new GetDBConnection1(); //connect to database
    /**
     * Creates new form Cash_book
     */
    public Cash_book() {
        initComponents();
    
   try {
             new Thread(new Runnable() {

            @Override
            public void run() {
                java.util.Date d = new java.util.Date();
                SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");

                String s2 = sd.format(d);
                date1.setText(s2);

            }
        }).start();
        new Thread(new Runnable() {

            @Override
            public void run() {
                while (true) {
                    java.util.Date d = new java.util.Date();
                    String s = d.toString();
                    String ar[] = s.split(" ");
                    time1.setText(ar[3]);

                }
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        }).start();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
       
    }
    public static String cashBookID = null;
    public static String ledgerBookID = null;
    public static String date = null;
    public static String amountType = null;
    public static Double amount = 0.0;
    public static String des = null;
    
    DateFormat dfc = DateFormat.getDateInstance();
    //DateFormat dfL = DateFormat.getDateInstance();
    // ledger Book details
    public static String ledgerBookIDL = null;
    public static String dateL = null;
    public static String amountTypeL = null;
    public static String ledgerTypeL = null;
    public static String paymentTypeL = null;
    public static Double amountL = 0.0;
    public static String desL = null;
    
      private int idAutoGenerate()
    {
        String queryid = "SELECT MAX(cashbook_id) FROM cash_book";
        int nextappid;

        try {
            pst = dbc.con.prepareStatement(queryid);
            rs = this.pst.executeQuery();

            while (rs.next()) {
                nextappid = rs.getInt(1);
                Integer appid = nextappid+1;
                return appid;
               
            }

        } 
        catch (SQLException err) 
        {
            JOptionPane.showMessageDialog(this, err);
        }       
        return 0;
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        minimizedbtn = new javax.swing.JLabel();
        closebtn = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JLabel();
        backbtn = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        amountCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionText = new javax.swing.JTextArea();
        cashBooktable = new javax.swing.JScrollPane();
        cashBookTable = new javax.swing.JTable();
        cashBookIDText = new javax.swing.JTextField();
        ledgerBookIDText = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        searchCashBook = new javax.swing.JButton();
        searchLedger = new javax.swing.JLabel();
        rupeeslbl = new javax.swing.JLabel();
        rupeesText = new javax.swing.JTextField();
        cashBookDescrption = new javax.swing.JLabel();
        time1 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        CashBookClear = new javax.swing.JButton();
        cashBookIdGenerate = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        searchLedger1 = new javax.swing.JButton();
        ledgerBookClear = new javax.swing.JButton();
        jlab = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        cashbookID = new javax.swing.JLabel();
        ledgerID1 = new javax.swing.JLabel();
        Date = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ledgerBookTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(175, 10));
        setMinimumSize(new java.awt.Dimension(1024, 720));
        setSize(new java.awt.Dimension(1024, 720));
        getContentPane().setLayout(null);

        jPanel1.setMinimumSize(new java.awt.Dimension(1024, 720));
        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 720));
        jPanel1.setLayout(null);

        minimizedbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/minimizebtn.png"))); // NOI18N
        minimizedbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizedbtnMouseClicked(evt);
            }
        });
        jPanel1.add(minimizedbtn);
        minimizedbtn.setBounds(900, 10, 25, 25);

        closebtn.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        closebtn.setForeground(new java.awt.Color(204, 204, 204));
        closebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/closebtn.png"))); // NOI18N
        closebtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closebtn.setPreferredSize(new java.awt.Dimension(30, 30));
        closebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebtnMouseClicked(evt);
            }
        });
        jPanel1.add(closebtn);
        closebtn.setBounds(990, 10, 25, 25);

        logoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/logoutbtn.png"))); // NOI18N
        logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutBtnMouseClicked(evt);
            }
        });
        jPanel1.add(logoutBtn);
        logoutBtn.setBounds(960, 10, 25, 25);

        backbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/backbtn.png"))); // NOI18N
        backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbtnMouseClicked(evt);
            }
        });
        jPanel1.add(backbtn);
        backbtn.setBounds(930, 10, 25, 25);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cash Book");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(60, 23, 90, 23);

        amountCombo.setBackground(new java.awt.Color(0, 153, 0));
        amountCombo.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        amountCombo.setForeground(new java.awt.Color(255, 255, 255));
        amountCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Amount", "Credit", "Debit" }));
        jPanel1.add(amountCombo);
        amountCombo.setBounds(160, 250, 150, 28);

        descriptionText.setColumns(20);
        descriptionText.setForeground(new java.awt.Color(0, 102, 0));
        descriptionText.setRows(5);
        descriptionText.setSelectionColor(new java.awt.Color(0, 153, 0));
        jScrollPane1.setViewportView(descriptionText);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(160, 330, 220, 96);

        cashBookTable.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        cashBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cash Book ID", "Ledger Book ID", "Date", "Amount Type", "Description", "Amount"
            }
        ));
        cashBookTable.setGridColor(new java.awt.Color(0, 153, 0));
        cashBookTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        cashBookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cashBookTableMouseClicked(evt);
            }
        });
        cashBooktable.setViewportView(cashBookTable);

        jPanel1.add(cashBooktable);
        cashBooktable.setBounds(130, 520, 760, 120);

        cashBookIDText.setForeground(new java.awt.Color(0, 102, 0));
        cashBookIDText.setEnabled(false);
        cashBookIDText.setSelectionColor(new java.awt.Color(0, 153, 0));
        jPanel1.add(cashBookIDText);
        cashBookIDText.setBounds(160, 130, 130, 28);

        ledgerBookIDText.setForeground(new java.awt.Color(0, 102, 0));
        ledgerBookIDText.setEnabled(false);
        ledgerBookIDText.setSelectionColor(new java.awt.Color(0, 153, 0));
        ledgerBookIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerBookIDTextActionPerformed(evt);
            }
        });
        jPanel1.add(ledgerBookIDText);
        ledgerBookIDText.setBounds(160, 170, 130, 28);

        addbtn.setBackground(new java.awt.Color(0, 153, 0));
        addbtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("Add");
        addbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addbtnMouseClicked(evt);
            }
        });
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        jPanel1.add(addbtn);
        addbtn.setBounds(160, 440, 70, 25);

        delete.setBackground(new java.awt.Color(0, 153, 0));
        delete.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete);
        delete.setBounds(320, 440, 65, 25);

        update.setBackground(new java.awt.Color(0, 153, 0));
        update.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update);
        update.setBounds(240, 440, 70, 25);

        searchCashBook.setBackground(new java.awt.Color(0, 153, 0));
        searchCashBook.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        searchCashBook.setForeground(new java.awt.Color(255, 255, 255));
        searchCashBook.setText("Search");
        searchCashBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCashBookActionPerformed(evt);
            }
        });
        jPanel1.add(searchCashBook);
        searchCashBook.setBounds(410, 650, 90, 25);

        searchLedger.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        searchLedger.setForeground(new java.awt.Color(255, 255, 255));
        searchLedger.setText("Search Ledgers");
        jPanel1.add(searchLedger);
        searchLedger.setBounds(670, 120, 100, 30);

        rupeeslbl.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        rupeeslbl.setForeground(new java.awt.Color(255, 255, 255));
        rupeeslbl.setText("Rs.");
        jPanel1.add(rupeeslbl);
        rupeeslbl.setBounds(30, 290, 130, 28);

        rupeesText.setForeground(new java.awt.Color(0, 102, 0));
        rupeesText.setSelectionColor(new java.awt.Color(0, 153, 0));
        rupeesText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rupeesTextActionPerformed(evt);
            }
        });
        jPanel1.add(rupeesText);
        rupeesText.setBounds(160, 290, 130, 28);

        cashBookDescrption.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        cashBookDescrption.setForeground(new java.awt.Color(255, 255, 255));
        cashBookDescrption.setText("Description");
        jPanel1.add(cashBookDescrption);
        cashBookDescrption.setBounds(30, 330, 130, 28);

        time1.setBackground(new java.awt.Color(255, 255, 255));
        time1.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        time1.setForeground(new java.awt.Color(255, 255, 255));
        time1.setText("time");
        jPanel1.add(time1);
        time1.setBounds(710, 0, 70, 20);

        date1.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        date1.setForeground(new java.awt.Color(255, 255, 255));
        date1.setText("date");
        jPanel1.add(date1);
        date1.setBounds(710, 20, 60, 10);

        jDateChooser1.setDateFormatString("yyyy-MMM-d ");
        jDateChooser1.setPreferredSize(new java.awt.Dimension(70, 20));
        jPanel1.add(jDateChooser1);
        jDateChooser1.setBounds(710, 160, 130, 30);

        CashBookClear.setBackground(new java.awt.Color(0, 153, 0));
        CashBookClear.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        CashBookClear.setForeground(new java.awt.Color(255, 255, 255));
        CashBookClear.setText("Clear");
        CashBookClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashBookClearActionPerformed(evt);
            }
        });
        jPanel1.add(CashBookClear);
        CashBookClear.setBounds(640, 650, 90, 25);

        cashBookIdGenerate.setBackground(new java.awt.Color(0, 153, 0));
        cashBookIdGenerate.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        cashBookIdGenerate.setForeground(new java.awt.Color(255, 255, 255));
        cashBookIdGenerate.setText("Generate");
        cashBookIdGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashBookIdGenerateActionPerformed(evt);
            }
        });
        jPanel1.add(cashBookIdGenerate);
        cashBookIdGenerate.setBounds(320, 130, 79, 25);

        jDateChooser2.setDateFormatString("yyyy-MMM-d ");
        jDateChooser2.setPreferredSize(new java.awt.Dimension(70, 20));
        jPanel1.add(jDateChooser2);
        jDateChooser2.setBounds(160, 210, 130, 30);

        searchLedger1.setBackground(new java.awt.Color(0, 153, 0));
        searchLedger1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        searchLedger1.setForeground(new java.awt.Color(255, 255, 255));
        searchLedger1.setText("Search");
        searchLedger1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchLedger1ActionPerformed(evt);
            }
        });
        jPanel1.add(searchLedger1);
        searchLedger1.setBounds(620, 210, 90, 25);

        ledgerBookClear.setBackground(new java.awt.Color(0, 153, 0));
        ledgerBookClear.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        ledgerBookClear.setForeground(new java.awt.Color(255, 255, 255));
        ledgerBookClear.setText("Clear");
        ledgerBookClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerBookClearActionPerformed(evt);
            }
        });
        jPanel1.add(ledgerBookClear);
        ledgerBookClear.setBounds(750, 210, 90, 25);

        jlab.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jlab.setForeground(new java.awt.Color(255, 255, 255));
        jlab.setText("Date");
        jPanel1.add(jlab);
        jlab.setBounds(30, 210, 130, 28);

        type.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        type.setForeground(new java.awt.Color(255, 255, 255));
        type.setText("Select Amount");
        jPanel1.add(type);
        type.setBounds(30, 250, 130, 28);

        cashbookID.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        cashbookID.setForeground(new java.awt.Color(255, 255, 255));
        cashbookID.setText("Cash Book ID");
        jPanel1.add(cashbookID);
        cashbookID.setBounds(30, 130, 130, 28);

        ledgerID1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        ledgerID1.setForeground(new java.awt.Color(255, 255, 255));
        ledgerID1.setText("Ledger Book ID");
        jPanel1.add(ledgerID1);
        ledgerID1.setBounds(30, 170, 130, 28);

        Date.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        Date.setForeground(new java.awt.Color(255, 255, 255));
        Date.setText("Date");
        jPanel1.add(Date);
        Date.setBounds(630, 160, 60, 28);

        jScrollPane3.setBackground(new java.awt.Color(0, 153, 0));

        ledgerBookTable.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        ledgerBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ledger ID", "Date", "Ledger Type", "Payment Type", "Amount Type", "Description", "Amount"
            }
        ));
        ledgerBookTable.setGridColor(new java.awt.Color(0, 204, 0));
        ledgerBookTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        ledgerBookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ledgerBookTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ledgerBookTable);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(440, 260, 550, 200);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(20, 100, 400, 400);

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.add(jSeparator2);
        jSeparator2.setBounds(430, 100, 570, 400);

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/backsup.jpg"))); // NOI18N
        bg.setText("Search");
        bg.setMaximumSize(new java.awt.Dimension(1024, 720));
        bg.setMinimumSize(new java.awt.Dimension(1024, 720));
        bg.setPreferredSize(new java.awt.Dimension(1024, 720));
        jPanel1.add(bg);
        bg.setBounds(0, 0, 1024, 720);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1024, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseClicked
        Login login = new Login ();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutBtnMouseClicked

    private void backbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseClicked
       Accounts accounts = new Accounts();
       accounts.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_backbtnMouseClicked

    private void rupeesTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rupeesTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rupeesTextActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        
        DefaultTableModel model=(DefaultTableModel) cashBookTable.getModel();
       
       cashBookID = cashBookIDText.getText();
       ledgerBookID = ledgerBookIDText.getText();
       date = ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText();
       amountType = (String) amountCombo.getSelectedItem();
       amount = Double.parseDouble(rupeesText.getText());
       des = descriptionText.getText();
       
      
       
       
       
        if(cashBookID.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Cash Book ID cannot be empty!");
        }
        else
        {
        }
       
         try {
              
          String query1="INSERT INTO cash_book values('"+cashBookID+"','"+ledgerBookID+"','"+date+"','"+des+"','"+amountType+"','"+amount+"')";
   
            
             pst=dbc.con.prepareStatement(query1);
            
            pst.execute();
            
            model.addRow(new Object[]{cashBookID, ledgerBookID, date, amountType, des, amount});
        JOptionPane.showConfirmDialog(null, "Successfully Added");
    
             cashBookIDText.setText("");
             ledgerBookIDText.setText("");
             descriptionText.setText("");
             ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).setText(null);
             //Cdate.setDate(null);
             amountCombo.setSelectedItem("Amount");
             rupeesText.setText("0.0");
      }
      catch(Exception e){
          System.out.println(e);
      }
        
        
       
        
        
    }//GEN-LAST:event_addbtnActionPerformed

    private void addbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnMouseClicked
        
        
        
    }//GEN-LAST:event_addbtnMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) cashBookTable.getModel();
        
         int x= JOptionPane.showConfirmDialog(null, "Do you really want to update?");
        if(x==0){
                        cashBookID = cashBookIDText.getText();
                        ledgerBookID = ledgerBookIDText.getText();
                        date = ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText();
                        amountType = (String) amountCombo.getSelectedItem();
                        amount = Double.parseDouble(rupeesText.getText());

                        
                        des = descriptionText.getText();
                       
                        String sql="Update cash_book SET  cashbook_id='"+cashBookID+"' , ledgerbook_id='"+ledgerBookID+"' date='"+date+"' ,  amountType='"+amountType+"', description='"+des+"', amount='"+amount+"' WHERE cashbook_id='"+cashBookID+"' ";
           try{
                pst=dbc.con.prepareStatement(sql);
               
                pst.execute();
                JOptionPane.showConfirmDialog(null, "Updated");
               model.addRow(new Object[]{cashBookID,ledgerBookID, date, amountType, des,amount});
            
                 cashBookIDText.setText("");
                 ledgerBookIDText.setText("");
                 ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).setText(null);
                // Cdate.setDate(null);
                 descriptionText.setText("");
                 amountCombo.setSelectedItem("Amount");
                 rupeesText.setText("0.0");
            
           }
            catch(Exception e){
           
           }
                }
        
    }//GEN-LAST:event_updateActionPerformed

    private void searchCashBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCashBookActionPerformed
        // TODO add your handling code here:
      
      
        cashBookID = cashBookIDText.getText();
        date = ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText();
        
       
       
        try{
             
            
            String sql="Select * from cash_book where cashbook_id LIKE CONCAT('%','" +  cashBookID + "','%') and (date='" +  date + "') ";
           
            pst=dbc.con.prepareStatement(sql);
            
            rs=pst.executeQuery();
            JOptionPane.showConfirmDialog(null, "1");

            while(rs.next()){

                

               cashBookID = rs.getString("cashbook_id");
               ledgerBookID = rs.getString("ledgerbook_id");
               des = rs.getString("description");
               amountType = rs.getString("amountType");
               amount = rs.getDouble("amount");
               
               String rupee=(Double.toString(amount));

             cashBookIDText.setText(cashBookID); 
             descriptionText.setText(des);
             
             amountCombo.setSelectedItem(amountType);
             rupeesText.setText(rupee);
                
               
                DefaultTableModel model=(DefaultTableModel) cashBookTable.getModel();
                
                model.addRow(new Object[]{cashBookID, ledgerBookID, date,  amountType, des,amount});
            }
        
        JOptionPane.showConfirmDialog(null, "2");
        }
      catch(Exception e){}

    
        
    }//GEN-LAST:event_searchCashBookActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        //----------------delete from database
        try{
            
            cashBookID = cashBookIDText.getText();     
             String sql = "delete  from cash_book where cashbook_id ='" + cashBookID + "'";
             pst = dbc.con.prepareStatement(sql);
             pst.execute();
            
            
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, " error");
        }
    //---------delete from table------------------
        DefaultTableModel model=(DefaultTableModel) cashBookTable.getModel();
        model.removeRow(cashBookTable.getSelectedRow());

        //-----------reset textfields---------------
             cashBookIDText.setText(""); 
             descriptionText.setText("");
             ledgerBookIDText.setText("");
             ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).setText(null);
             //Cdate.setDate(null);
             amountCombo.setSelectedItem("Amount");
             rupeesText.setText("0.0");
    
    }//GEN-LAST:event_deleteActionPerformed

    private void cashBookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cashBookTableMouseClicked
        // TODO add your handling code here:
        
          int r=cashBookTable.getSelectedRow();
        
         cashBookID = cashBookTable.getValueAt(r, 0).toString();
         ledgerBookID = cashBookTable.getValueAt(r, 1).toString();
         date = cashBookTable.getValueAt(r, 2).toString();  
         amountType = cashBookTable.getValueAt(r, 3).toString();
         des = cashBookTable.getValueAt(r, 4).toString();
         String rupee = cashBookTable.getValueAt(r, 5).toString();
        
        // String username=addemptable.getValueAt(r,6).toString();
        
          cashBookIDText.setText(cashBookID);
          ledgerBookIDText.setText(ledgerBookID);
          descriptionText.setText(des);
          amountCombo.setSelectedItem(amountType);
          rupeesText.setText(rupee);
         // Cdate.setDateFormat(dfc);
        ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).setText(String.valueOf(dfc));
        
        
        
        
    }//GEN-LAST:event_cashBookTableMouseClicked

    private void CashBookClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashBookClearActionPerformed
        DefaultTableModel model = (DefaultTableModel) cashBookTable.getModel();
                
        model.setRowCount(0);
             cashBookIDText.setText("");
             ledgerBookIDText.setText("");
             descriptionText.setText("");
             ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).setText(null);
             //Cdate.setDate(null);
             amountCombo.setSelectedItem("Amount");
             rupeesText.setText("0.0");
    }//GEN-LAST:event_CashBookClearActionPerformed

    private void cashBookIdGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashBookIdGenerateActionPerformed
        // TODO add your handling code here:
        Integer cashID = idAutoGenerate();
       cashBookID = cashID.toString();

        cashBookIDText.setText(cashBookID);

    }//GEN-LAST:event_cashBookIdGenerateActionPerformed

    private void searchLedger1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchLedger1ActionPerformed
        // TODO add your handling code here:
        
   
        
    
        
        dateL = ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText();

        try{
            JOptionPane.showMessageDialog(null, "ok.");
            String sql="Select * from ledger_book where  date='" +  dateL+ "'";

            pst=dbc.con.prepareStatement(sql);
            JOptionPane.showMessageDialog(null, "ok2.");
            rs=pst.executeQuery();
            JOptionPane.showMessageDialog(null, "ok3.");
            while(rs.next()){
                
                ledgerBookID = rs.getString("ledger_id");
              
                desL = rs.getString("description");
                amountTypeL = rs.getString("amountType");
                ledgerTypeL = rs.getString("ledgerType");
                paymentTypeL = rs.getString("paymentType");
                amountL = rs.getDouble("amount");
            
                String rupeeL=(Double.toString(amountL));
                
                ledgerBookIDText.setText(ledgerBookID);
                descriptionText.setText(desL);
                amountCombo.setSelectedItem(amountTypeL);
                rupeesText.setText(rupeeL);

                DefaultTableModel model=(DefaultTableModel) ledgerBookTable.getModel();

                model.addRow(new Object[]{ledgerBookID, dateL, ledgerTypeL, paymentTypeL, amountTypeL, desL,amountL});
            
            }

        }
        catch(Exception e){}

    }//GEN-LAST:event_searchLedger1ActionPerformed

    private void ledgerBookClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerBookClearActionPerformed
        DefaultTableModel model = (DefaultTableModel) ledgerBookTable.getModel();
        
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(null);
  //      Ldate.setDate(null);
        model.setRowCount(0);
        
    }//GEN-LAST:event_ledgerBookClearActionPerformed

    private void ledgerBookIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerBookIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ledgerBookIDTextActionPerformed

    private void ledgerBookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ledgerBookTableMouseClicked
        // TODO add your handling code here:
        int r = ledgerBookTable.getSelectedRow();

        ledgerBookID = ledgerBookTable.getValueAt(r, 0).toString();
        date = ledgerBookTable.getValueAt(r, 1).toString();
        ledgerTypeL = ledgerBookTable.getValueAt(r, 2).toString();
        paymentTypeL = ledgerBookTable.getValueAt(r, 3).toString();
        amountType = ledgerBookTable.getValueAt(r, 4).toString();
        des = ledgerBookTable.getValueAt(r, 5).toString();
        String rupee = ledgerBookTable.getValueAt(r, 6).toString();

        ledgerBookIDText.setText(ledgerBookID);
        descriptionText.setText(des);
        ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).setText(String.valueOf(dfc));
        //Ldate.setDateFormat(dfc);
        amountCombo.setSelectedItem(amountType);
        rupeesText.setText(rupee);

    }//GEN-LAST:event_ledgerBookTableMouseClicked

    private void minimizedbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizedbtnMouseClicked
        // TODO add your handling code here:
        this.setState(ICONIFIED);
    }//GEN-LAST:event_minimizedbtnMouseClicked

    private void closebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseClicked
        // TODO add your handling code here:

        this.dispose();
    }//GEN-LAST:event_closebtnMouseClicked

    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cash_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cash_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cash_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cash_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cash_book().setVisible(true);
            }
        });
    }
        
                
                
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CashBookClear;
    private javax.swing.JLabel Date;
    private javax.swing.JButton addbtn;
    private javax.swing.JComboBox<String> amountCombo;
    private javax.swing.JLabel backbtn;
    private javax.swing.JLabel bg;
    private javax.swing.JLabel cashBookDescrption;
    private javax.swing.JTextField cashBookIDText;
    private javax.swing.JButton cashBookIdGenerate;
    private javax.swing.JTable cashBookTable;
    private javax.swing.JScrollPane cashBooktable;
    private javax.swing.JLabel cashbookID;
    private javax.swing.JLabel closebtn;
    private javax.swing.JLabel date1;
    private javax.swing.JButton delete;
    private javax.swing.JTextArea descriptionText;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel jlab;
    private javax.swing.JButton ledgerBookClear;
    private javax.swing.JTextField ledgerBookIDText;
    private javax.swing.JTable ledgerBookTable;
    private javax.swing.JLabel ledgerID1;
    private javax.swing.JLabel logoutBtn;
    private javax.swing.JLabel minimizedbtn;
    private javax.swing.JTextField rupeesText;
    private javax.swing.JLabel rupeeslbl;
    private javax.swing.JButton searchCashBook;
    private javax.swing.JLabel searchLedger;
    private javax.swing.JButton searchLedger1;
    private javax.swing.JLabel time1;
    private javax.swing.JLabel type;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
