/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gehan;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gEhan
 */
public class Ledger extends javax.swing.JFrame {

    ResultSet rs;
    PreparedStatement pst;
    Statement st;

    GetDBConnection1 dbc = new GetDBConnection1(); //connect to database

    /**
     * Creates new form Ledger
     */
    public Ledger() {
        initComponents();
        try {
            new Thread(new Runnable() {

                @Override
                public void run() {
                    Date d = new Date();
                    SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");

                    String s2 = sd.format(d);
                    date1.setText(s2);

                }
            }).start();
            new Thread(new Runnable() {

                @Override
                public void run() {
                    while (true) {
                        Date d = new Date();
                        String s = d.toString();
                        String ar[] = s.split(" ");
                        time1.setText(ar[3]);

                    }
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
            }).start();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public static String ledgerBookID = null;
    public static String date = null;
    public static String amountType = null;
    public static String ledgerType = null;
    public static String paymentType = null;
    public static Double amount = 0.0;
    public static String des = null;

    DateFormat df = DateFormat.getDateInstance();

    private int idAutoGenerate() {
        String queryid = "SELECT MAX(ledger_id) FROM ledger_book";
        int nextappid;

        try {
            pst = dbc.con.prepareStatement(queryid);
            rs = this.pst.executeQuery();

            while (rs.next()) {
                nextappid = rs.getInt(1);
                Integer appid = nextappid + 1;
                return appid;

            }

        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this, err);
        }
        return 0;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        closebtn = new javax.swing.JLabel();
        logoutbtn = new javax.swing.JLabel();
        backbtn = new javax.swing.JLabel();
        minimizedbtn = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ledgerBookTable = new javax.swing.JTable();
        ledgerID = new javax.swing.JLabel();
        Date = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        ledgerBookIDText = new javax.swing.JTextField();
        ledgerCombo = new javax.swing.JComboBox<>();
        paymentCombo = new javax.swing.JComboBox<>();
        amountCombo = new javax.swing.JComboBox<>();
        description = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionText = new javax.swing.JTextArea();
        addbtn = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        searchLedger = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        searchSales = new javax.swing.JButton();
        searchSalesLbl = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        time1 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        rupeeslbl = new javax.swing.JLabel();
        Ltype = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        rupeesText = new javax.swing.JTextField();
        ledgerBookClear = new javax.swing.JButton();
        ledgerBookIdGenerate = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(175, 10));
        setMinimumSize(new java.awt.Dimension(1024, 720));
        setSize(new java.awt.Dimension(1024, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 720));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closebtn.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        closebtn.setForeground(new java.awt.Color(204, 204, 204));
        closebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/closebtn.png"))); // NOI18N
        closebtn.setLabelFor(closebtn);
        closebtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closebtn.setPreferredSize(new java.awt.Dimension(30, 30));
        closebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebtnMouseClicked(evt);
            }
        });
        jPanel1.add(closebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 10, 25, 25));

        logoutbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/logoutbtn.png"))); // NOI18N
        logoutbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutbtnMouseClicked(evt);
            }
        });
        jPanel1.add(logoutbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 10, 25, 25));

        backbtn.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        backbtn.setForeground(new java.awt.Color(204, 204, 204));
        backbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/backbtn.png"))); // NOI18N
        backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbtnMouseClicked(evt);
            }
        });
        jPanel1.add(backbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 10, 25, 25));

        minimizedbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/minimizebtn.png"))); // NOI18N
        minimizedbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizedbtnMouseClicked(evt);
            }
        });
        jPanel1.add(minimizedbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 10, 25, 25));

        jScrollPane2.setBackground(new java.awt.Color(0, 153, 0));

        ledgerBookTable.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        ledgerBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ledger ID", "Date", "Ledger Type", "Payment Type", "Amount Type", "Description", "Amount"
            }
        ));
        ledgerBookTable.setGridColor(new java.awt.Color(0, 204, 0));
        ledgerBookTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        ledgerBookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ledgerBookTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ledgerBookTable);
        if (ledgerBookTable.getColumnModel().getColumnCount() > 0) {
            ledgerBookTable.getColumnModel().getColumn(1).setResizable(false);
            ledgerBookTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, 840, 140));

        ledgerID.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        ledgerID.setForeground(new java.awt.Color(255, 255, 255));
        ledgerID.setText("Ledger Book ID");
        jPanel1.add(ledgerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 130, 28));

        Date.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        Date.setForeground(new java.awt.Color(255, 255, 255));
        Date.setText("Date");
        jPanel1.add(Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 130, 28));

        type.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        type.setForeground(new java.awt.Color(255, 255, 255));
        type.setText("Select Amount");
        jPanel1.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 130, 28));

        ledgerBookIDText.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        ledgerBookIDText.setForeground(new java.awt.Color(0, 153, 0));
        ledgerBookIDText.setEnabled(false);
        ledgerBookIDText.setSelectionColor(new java.awt.Color(0, 153, 0));
        jPanel1.add(ledgerBookIDText, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 130, 28));

        ledgerCombo.setBackground(new java.awt.Color(0, 153, 0));
        ledgerCombo.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        ledgerCombo.setForeground(new java.awt.Color(255, 255, 255));
        ledgerCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ledger Type", "Sale", "Purchasing", "Payroll", "Vehicle", "Other" }));
        ledgerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerComboActionPerformed(evt);
            }
        });
        jPanel1.add(ledgerCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 150, 28));

        paymentCombo.setBackground(new java.awt.Color(0, 153, 0));
        paymentCombo.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        paymentCombo.setForeground(new java.awt.Color(255, 255, 255));
        paymentCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Payment Type", "Cash", "Cheque" }));
        jPanel1.add(paymentCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, 150, 28));

        amountCombo.setBackground(new java.awt.Color(0, 153, 0));
        amountCombo.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        amountCombo.setForeground(new java.awt.Color(255, 255, 255));
        amountCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Amount", "Credit", "Debit" }));
        jPanel1.add(amountCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 150, 28));

        description.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        description.setForeground(new java.awt.Color(255, 255, 255));
        description.setText("Description");
        jPanel1.add(description, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 130, 28));

        descriptionText.setColumns(20);
        descriptionText.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        descriptionText.setForeground(new java.awt.Color(0, 153, 0));
        descriptionText.setRows(5);
        descriptionText.setSelectionColor(new java.awt.Color(0, 153, 0));
        jScrollPane1.setViewportView(descriptionText);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 220, -1));

        addbtn.setBackground(new java.awt.Color(0, 153, 0));
        addbtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        jPanel1.add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, 70, -1));

        update.setBackground(new java.awt.Color(0, 153, 0));
        update.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, 70, 25));

        delete.setBackground(new java.awt.Color(0, 153, 0));
        delete.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, -1, -1));

        searchLedger.setBackground(new java.awt.Color(0, 153, 0));
        searchLedger.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        searchLedger.setForeground(new java.awt.Color(255, 255, 255));
        searchLedger.setText("Search");
        searchLedger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchLedgerActionPerformed(evt);
            }
        });
        jPanel1.add(searchLedger, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 650, 90, -1));

        jTable1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Shop Name", "Quantity", "Total Amount", "Payment Type"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, 420, 140));

        searchSales.setBackground(new java.awt.Color(0, 153, 0));
        searchSales.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        searchSales.setForeground(new java.awt.Color(255, 255, 255));
        searchSales.setText("Search");
        searchSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSalesActionPerformed(evt);
            }
        });
        jPanel1.add(searchSales, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 330, 90, -1));

        searchSalesLbl.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        searchSalesLbl.setForeground(new java.awt.Color(255, 255, 255));
        searchSalesLbl.setText("Search Sales");
        jPanel1.add(searchSalesLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 330, -1, 20));

        jDateChooser1.setDateFormatString("yyyy-MMM-d ");
        jDateChooser1.setPreferredSize(new java.awt.Dimension(70, 20));
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 130, 30));

        time1.setBackground(new java.awt.Color(255, 255, 255));
        time1.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        time1.setForeground(new java.awt.Color(255, 255, 255));
        time1.setText("time");
        jPanel1.add(time1, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 0, 60, 20));

        date1.setFont(new java.awt.Font("Calibri Light", 0, 13)); // NOI18N
        date1.setForeground(new java.awt.Color(255, 255, 255));
        date1.setText("date");
        jPanel1.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 14, 70, -1));

        rupeeslbl.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        rupeeslbl.setForeground(new java.awt.Color(255, 255, 255));
        rupeeslbl.setText("Rs.");
        jPanel1.add(rupeeslbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 130, 28));

        Ltype.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        Ltype.setForeground(new java.awt.Color(255, 255, 255));
        Ltype.setText("Ledger Type");
        jPanel1.add(Ltype, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 130, 28));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Payment Type");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, -1));

        rupeesText.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        rupeesText.setForeground(new java.awt.Color(0, 153, 0));
        rupeesText.setSelectionColor(new java.awt.Color(0, 153, 0));
        rupeesText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rupeesTextActionPerformed(evt);
            }
        });
        jPanel1.add(rupeesText, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, 130, 28));

        ledgerBookClear.setBackground(new java.awt.Color(0, 153, 0));
        ledgerBookClear.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        ledgerBookClear.setForeground(new java.awt.Color(255, 255, 255));
        ledgerBookClear.setText("Clear");
        ledgerBookClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerBookClearActionPerformed(evt);
            }
        });
        jPanel1.add(ledgerBookClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 650, 90, -1));

        ledgerBookIdGenerate.setBackground(new java.awt.Color(0, 153, 0));
        ledgerBookIdGenerate.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        ledgerBookIdGenerate.setForeground(new java.awt.Color(255, 255, 255));
        ledgerBookIdGenerate.setText("Generate");
        ledgerBookIdGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerBookIdGenerateActionPerformed(evt);
            }
        });
        jPanel1.add(ledgerBookIdGenerate, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, -1));

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 440, 400));

        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, 450, 400));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ledger Book");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 95, 26));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackGroundImages/backsup.jpg"))); // NOI18N
        jPanel1.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 720));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 720));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutbtnMouseClicked
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutbtnMouseClicked

    private void backbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseClicked
        Accounts accounts = new Accounts();
        accounts.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backbtnMouseClicked

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ledgerBookTable.getModel();

        ledgerBookID = ledgerBookIDText.getText();
        date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
        amountType = (String) amountCombo.getSelectedItem();
        ledgerType = (String) ledgerCombo.getSelectedItem();
        paymentType = (String) paymentCombo.getSelectedItem();
        amount = Double.parseDouble(rupeesText.getText());
        des = descriptionText.getText();

        try {
            JOptionPane.showMessageDialog(null, "ok.");
            String query1 = "INSERT INTO ledger_book values('" + ledgerBookID + "','" + date + "','" + ledgerType + "','" + paymentType + "','" + amountType + "','" + amount + "','" + des + "')";

            pst = dbc.con.prepareStatement(query1);

            pst.execute();
            JOptionPane.showMessageDialog(null, "ok.");
            model.addRow(new Object[]{ledgerBookID, date, ledgerType, paymentType, amountType, des, amount});
            JOptionPane.showConfirmDialog(null, "Successfully Added");

            ledgerBookIDText.setText("");
            descriptionText.setText("");
           ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(null);
            amountCombo.setSelectedItem("Amount");
            ledgerCombo.setSelectedItem("Ledger Type");
            paymentCombo.setSelectedItem("Payment Type");
            rupeesText.setText("0.0");
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_addbtnActionPerformed

    private void rupeesTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rupeesTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rupeesTextActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ledgerBookTable.getModel();

        int x = JOptionPane.showConfirmDialog(null, "Do you really want to update?");
        if (x == 0) {
            ledgerBookID = ledgerBookIDText.getText();
            date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
            amountType = (String) amountCombo.getSelectedItem();
            amount = Double.parseDouble(rupeesText.getText());

            des = descriptionText.getText();

            String sql = "Update ledger_book SET  ledger_id='" + ledgerBookID + "' , date='" + date + "' ,ledgerType='" + ledgerType + "',paymenType='" + paymentType + "', amountType='" + amountType + "', amount='" + amount + "' , description='" + des + "' WHERE ledger_id='" + ledgerBookID + "' ";
            try {
                pst = dbc.con.prepareStatement(sql);

                pst.execute();
                JOptionPane.showConfirmDialog(null, "Updated");
                model.addRow(new Object[]{ledgerBookID, date, ledgerType, paymentType, amountType, des, amount});

                ledgerBookIDText.setText("");
                descriptionText.setText("");
                ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(null);
  //              Ldate.setDate(null);
                amountCombo.setSelectedItem("Amount");
                ledgerCombo.setSelectedItem("Ledger Type");
                paymentCombo.setSelectedItem("Payment Type");
                rupeesText.setText("0.0");

            } catch (Exception e) {

            }
        }

    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try {

            ledgerBookID = ledgerBookIDText.getText();
            String sql = "delete  from ledger_book where ledger_id ='" + ledgerBookID + "'";
            pst = dbc.con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Successfully Deleted");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, " error");
        }
        //---------delete from table------------------
        DefaultTableModel model = (DefaultTableModel) ledgerBookTable.getModel();
        model.removeRow(ledgerBookTable.getSelectedRow());

        //-----------reset textfields---------------
        ledgerBookIDText.setText("");
        descriptionText.setText("");
       ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(null);
        amountCombo.setSelectedItem("Amount");
        ledgerCombo.setSelectedItem("Ledger Type");
        paymentCombo.setSelectedItem("Payment Type");
        rupeesText.setText("0.0");


    }//GEN-LAST:event_deleteActionPerformed

    private void searchLedgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchLedgerActionPerformed
        // TODO add your handling code here:
        ledgerBookID = ledgerBookIDText.getText();
        date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();

        try {

            String sql = "Select * from ledger_book where ledger_id LIKE CONCAT('%','" + ledgerBookID + "','%') and (date='" + date + "') ";

            pst = dbc.con.prepareStatement(sql);

            rs = pst.executeQuery();

            while (rs.next()) {

                ledgerBookID = rs.getString("ledger_id");
                //date = df.format(Ldate.getDate("date"));
                des = rs.getString("description");
                amountType = rs.getString("amountType");
                ledgerType = rs.getString("ledgerType");
                paymentType = rs.getString("paymentType");
                amount = rs.getDouble("amount");

                String rupee = (Double.toString(amount));

                ledgerBookIDText.setText(ledgerBookID);
                descriptionText.setText(des);
                amountCombo.setSelectedItem(amountType);
                rupeesText.setText(rupee);

                DefaultTableModel model = (DefaultTableModel) ledgerBookTable.getModel();

                model.addRow(new Object[]{ledgerBookID, date, ledgerType, paymentType, amountType, des, amount});
            }

        } catch (Exception e) {
        }


    }//GEN-LAST:event_searchLedgerActionPerformed

    private void ledgerBookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ledgerBookTableMouseClicked
        // TODO add your handling code here:
        int r = ledgerBookTable.getSelectedRow();

        ledgerBookID = ledgerBookTable.getValueAt(r, 0).toString();
        date = ledgerBookTable.getValueAt(r, 1).toString();
        ledgerType = ledgerBookTable.getValueAt(r, 2).toString();
        paymentType = ledgerBookTable.getValueAt(r, 3).toString();
        amountType = ledgerBookTable.getValueAt(r, 4).toString();
        des = ledgerBookTable.getValueAt(r, 5).toString();
        String rupee = ledgerBookTable.getValueAt(r, 6).toString();

       
        ledgerBookIDText.setText(ledgerBookID);
        descriptionText.setText(des);
        //Ldate.setDateFormat(df);
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(String.valueOf(df));
        amountCombo.setSelectedItem(amountType);
        ledgerCombo.setSelectedItem(ledgerType);
        paymentCombo.setSelectedItem(paymentType);
        rupeesText.setText(rupee);


    }//GEN-LAST:event_ledgerBookTableMouseClicked

    private void ledgerBookClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerBookClearActionPerformed
        DefaultTableModel model = (DefaultTableModel) ledgerBookTable.getModel();

        model.setRowCount(0);
        ledgerBookIDText.setText("");
        descriptionText.setText("");
       ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(null);
        amountCombo.setSelectedItem("Amount");
        ledgerCombo.setSelectedItem("Ledger Type");
        paymentCombo.setSelectedItem("Payment Type");
        rupeesText.setText("0.0");
    }//GEN-LAST:event_ledgerBookClearActionPerformed

    private void ledgerBookIdGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerBookIdGenerateActionPerformed
        // TODO add your handling code here:
        Integer cashID = idAutoGenerate();
        ledgerBookID = cashID.toString();

        ledgerBookIDText.setText(ledgerBookID);
    }//GEN-LAST:event_ledgerBookIdGenerateActionPerformed

    private void closebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseClicked
        // TODO add your handling code here:

        this.dispose();

    }//GEN-LAST:event_closebtnMouseClicked

    private void ledgerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ledgerComboActionPerformed

    private void minimizedbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizedbtnMouseClicked
        // TODO add your handling code here:
        this.setState(ICONIFIED);
    }//GEN-LAST:event_minimizedbtnMouseClicked

    private void searchSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchSalesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ledger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ledger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ledger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ledger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ledger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Date;
    private javax.swing.JLabel Ltype;
    private javax.swing.JButton addbtn;
    private javax.swing.JComboBox<String> amountCombo;
    private javax.swing.JLabel backbtn;
    private javax.swing.JLabel bg;
    private javax.swing.JLabel closebtn;
    private javax.swing.JLabel date1;
    private javax.swing.JButton delete;
    private javax.swing.JLabel description;
    private javax.swing.JTextArea descriptionText;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton ledgerBookClear;
    private javax.swing.JTextField ledgerBookIDText;
    private javax.swing.JButton ledgerBookIdGenerate;
    private javax.swing.JTable ledgerBookTable;
    private javax.swing.JComboBox<String> ledgerCombo;
    private javax.swing.JLabel ledgerID;
    private javax.swing.JLabel logoutbtn;
    private javax.swing.JLabel minimizedbtn;
    private javax.swing.JComboBox<String> paymentCombo;
    private javax.swing.JTextField rupeesText;
    private javax.swing.JLabel rupeeslbl;
    private javax.swing.JButton searchLedger;
    private javax.swing.JButton searchSales;
    private javax.swing.JLabel searchSalesLbl;
    private javax.swing.JLabel time1;
    private javax.swing.JLabel type;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
